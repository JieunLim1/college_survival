#1. llm chain사용했을때,
먼저는 질문과 선택지,답, 그리고 설명을 생성했을때, 출력이 되지만 여러 이스케이프 문자 (\n) 가 포함이 되있어서 json 형식으로 파싱이 잘 안됐음

from langchain.prompts import PromptTemplate
from langchain.llms import OpenAI
from langchain.chains import LLMChain
import os
import json
from dotenv import load_dotenv
import fire

load_dotenv()
os.environ["OPENAI_API_KEY"] = os.getenv("OPEN_API_KEY")

llm = OpenAI(temperature=0.9)

#prompt template으로 질문 생성하고 json형식으로 반환
def make_question(input_text=""):
    prompt = PromptTemplate(
        input_variables=["text"],
        template="""Create a multiple-choice question in the text and outputting a JSON object with an array of these entities, using the following format:
        input:
        "Markdown":
        "The applications of language models include:
        • Auto-completion
        • Document summarization: Generating the most likely words for a summary after understanding the content of a document
        • Machine translation: Converting the English language to the Korean language by using a language understanding model in conjunction with a numerical output value, which is then translated back to the English language.
        • Dialogue systems: Evaluating the most probable words required during a conversation and generating sentences accordingly"
        output:
        {
        "Question": "What are the possible applications of language models?",
        "Options" :{"A":"Auto-completion","B": "Document summarization","C": "Machine translation","D": "All of the above"},
        "Answer": "D",
        "Explanation" : "Language models can be applied in various tasks such as auto-completion, document summarization, machine translation, speech recognition, dialogue systems, and even sentence creation."
        }
        input : {text}
        output :
        """
        )
    chain = LLMChain(llm=llm, prompt=prompt)
    output = chain.run(input_text)
    
    print(output)
    try:
        result = json.loads(output,strict = False)
        return (result)
    except:
        with open('error_output.txt', 'w') as fp:
            fp.write(output)
    

#사용자의 답과 문제의 답이 일치하는지 채점
def scoring(user_answer: str, question: dict):
    if (user_answer == question['Answer']):
        print ("Correct")
        return (question['Explanation'])
    else :
        print("Incorrect")
    return (question['Answer'] , question['Explanation'])

if __name__ == '__main__':
    question = make_question("The Transformer model, which proposed attention is all you need, is a groundbreaking event in deep learning that brought about a significant change. The model continuously changes the numerical values of specific words by looking at the surrounding words and focusing on them while changing the numerical value of the word. The human brain typically has around 10 billion neurons, but ChatGPT has approximately 1.17 billion neurons in its network, which is around a 100,000-fold difference.")
    print(question["Question"])


#2. chat model사용했을때,

무언가가 잘못되었음..
json 형식으로 잘 바꾼줄 알았는데,
question[“Question”]하면 에러가 나고
question[0] 하면 가장 먼저 시작하는 content의 c가 출력됨.. 이게 뭐지 ..?

이 문제는 json형식으로 문자열로 답변을 생성하는데, content = … 이렇게 시작을 하여 파싱이 안되었고 텍스트에 \n와 함께 있어서 문제가 발생했었음
JSONDECODEERROR
그러나 (text).content하면 앞에 컨텐트는 사라지고 답변을 생성하였고
json.loads(str_name, strict = False)라고 바꿔주면 이스케이프 문자 문제가 해결됨
default 값이 True이기에 이스케이프 문자가 json형식으로 잘 맞지 않았음
*** 아래 Python 공식 문서에 의하면 https://docs.python.org/ko/3/library/json.html#json.JSONDecodeError JSONDecoder에서 문자열 안에 제어 문자(\n, \t, \r, \0)가 기본 값으로는 허용되지 않으며 이를 허용하기 위해서는  strict=False로 전달하면 해당 제어 문자를 Json Decoder에서 허용합니다.  


#3. 오늘은 streamlit 을 사용해서 질문을 인터페이스에 띄우고 입력값을 받아 채점한 결과를 다시 띄우는 작업을 했는데,
채점하기 버튼을 누르면 모든 것이 초기화되는 현상이 일어났다. 그래서 찾아본 결과, 
질문 생성하기 버튼을 누르고 입력값을 받아 다시 채점하기 버튼을 누르는 순간, 
질문 생성하기 버튼을 누르고 난 뒤의 데이터들이 지역변수(?) 개념으로 저장되어 '채점하기' 버튼을 누를 때에는 초기화되어 저장되지 않았다. 그래서 그 위의 데이터들을 지역변수가 아닌 session_state에 저장한다!

#4 streamlit session state
streamlit은 직관적이지 않다. streamlit은 일련의 처리과정을 다르지 않고, 처음부터 다시 써클해서 채점하기 버튼을 눌러도 질문 생성하기 버튼을 다시 누르고 채점하기 버튼을 누르게 됨
그래서 객체를 세션에 넣고 그 session_state 안에 값이 있으면 다시 써클하지 않게한다.
https://docs.streamlit.io/library/api-reference/session-state

#5 현재 디렉토리 위치를 잘 확인하자 !
터미널에서 ls를 치면 현재 위치의 파일들의 리스트를 보여주고 (하위 폴더)
그 하위 폴더 안에서의 어떤 폴더를 열고 싶으면, cd 파일이름
하면 터미널에서 그 폴더로 이동해서 열리게됨! 
* cd는 위치를 이동하는 명령어!
rm은 remove의 약자

#6 streamlit button의 parameter: key
for문 안에 문제, 채점하기 버튼, 사용자 답변, 그리고 답을 띄우는 순으로 넣어주면 에러가 발생
이는 같은 키값의 버튼과 답에 여러 개의 값들이 입력되기 때문이다. 해결하려면, key = ?에 고유한 값을 넣어주면 되고 count에 1을 더하는 식으로 고유값을 지정해줌

